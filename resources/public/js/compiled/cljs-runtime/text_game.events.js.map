{"version":3,"sources":["text_game/events.cljs"],"mappings":";;;;AAKA,AAAA,AAACA,AAEA,AAAKC,AAAEA;AAAP,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAMD,AAAA,AAACD,AAEA,AAAAE,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASF;AAAT,AAAAG,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACE,AACE,AAAA,AAACC,AAAMF,AAAqBC;;AAEjC,AAAA,AAACN,AAEA,AAAAQ,AAAKH;AAAL,AAAA,AAAAI,AAAAD;AAAA,AAAAJ,AAAAK,AAAA,AAAA,AAASR;AAAT,AAAAG,AAAAK,AAAA,AAAA,AAAWC;AAAX,AAAAN,AAAAK,AAAA,AAAA,AAAkBH;AAAlB,AACMD,AACA,AAAA,AAACE,AAAwBD,AACzB,AAAA,AAACC,AAAcG","names":["re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2","_","p__41047","vec__41048","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","db","blanks","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","p__41051","vec__41052","inputs"],"sourcesContent":["(ns text-game.events\n  (:require\n   [re-frame.core :as re-frame]\n   [text-game.db :as db]))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn [_ _]\n   {:name \"re-frame\"\n    :text \"\\\"Little Red Riding <Hood::nn/>\\\" is a/an <beloved::jj/> fairy tale for young children.\\nIt is a story about a/an <young::jj/> girl and a wolf.\\nThe girl's mother sends her to take <food::food/> to her sick grandmother.\\nThe mother tells her she must not <stop::vb/> on the way.\\nA wolf sees the girl walking through the <woods::nns/> and makes a plan to <eat::vb/> her.\\nThe wolf <politely::rb/> asks the girl where she is going.\\nThe girl <answers::vbz/> him, because he seems <friendly::jj/>.\\nThen the wolf tells her to pick some <flowers::nns/> for her grandmother.\\nWhile she is <picking::vbg/> flowers, the wolf goes to her grandmother's house and eats her.\\nHe puts on the grandmother's <night-cap::nn/> and gets into her bed.\\nWhen the girl arrives at her grandmother's house, she gets into <bed::nn/> with the wolf.\\nThe wolf leaps upon the child and <eats::vbz/> her.\"\n    :remaining-blanks ()\n    :inputs ()}))\n\n(re-frame/reg-event-db\n ::set-blanks\n (fn [db [_ blanks]]\n   (do\n     (assoc db :remaining-blanks blanks))))\n\n(re-frame/reg-event-db\n ::set-inputs\n (fn [db [_ inputs blanks]]\n   (-> db\n       (assoc :remaining-blanks blanks)\n       (assoc :inputs inputs))))\n"]}