{"version":3,"sources":["text_game/core.cljs"],"mappings":";;;;;;;AAeA,AAAA,AAAMA;AAAN,AACE,AAAMC;AAAN,AACE,AAAA,AAACC;;AADH;;;AAGF,AAAA,AAAuBC;AAAvB,AACE,AAACC,AAAAA,AAAAA;;AACD,AAAA,AAACC,AAAgBC,AACD,AAAA,AAAiBC;;AAEnC,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AACD,AAACV;;AACD,AAACG","names":["text-game.core/dev-setup","text-game.config/debug?","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","text-game.core/mount-root","re-frame.core/clear-subscription-cache!","reagent.core.render.cljs$core$IFn$_invoke$arity$2","text-game.views/main-panel","js/document","text-game.core/init","G__41141","re-frame.core/dispatch-sync"],"sourcesContent":["(ns text-game.core\n  (:require\n   [reagent.core :as reagent]\n   [re-frame.core :as re-frame]\n   [text-game.events :as events]\n   [text-game.views :as views]\n   [text-game.config :as config]))\n   ;; [\"fs\" :as fs]))\n\n;; TODO: having trouble getting interop with node.js libraries\n\n; (defn node-slurp [path]\n;   (let [fs (nodejs/require \"fs\")]\n;     (.readFileSync fs path \"utf8\")))\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (reagent/render [views/main-panel]\n                  (.getElementById js/document \"app\")))\n\n(defn init []\n  (re-frame/dispatch-sync [::events/initialize-db])\n  (dev-setup)\n  (mount-root))\n"]}